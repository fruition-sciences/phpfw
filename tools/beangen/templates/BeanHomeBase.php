global $descriptor;
echo "<" . "?php";
?>

/*
 * Do not edit this file.
 * This code was automatically generated.
 * 
 * Created on Jun 30, 2007
 * 
 */

abstract class <?php echo $descriptor->xml['name'] ?>BeanHomeBase {
    public static function find($id) {
        $db = Transaction::getInstance()->getDB();
        $sql = "select * from " . <?php echo $descriptor->xml['name'] ?>Bean::TABLE_NAME .
            " where " . <?php echo $descriptor->xml['name'] ?>Bean::ID . "=" . $id;
        $db->query($sql);
        $rs = $db->fetch_row();
        return self::create($rs);
    }

    public static function create($rs, $alias='') {
        $bean = new <?php echo $descriptor->xml['name'] ?>Bean();
        $prefix = $alias ? "${alias}_" : "";
        self::populate($bean, $rs, $prefix);
        return $bean;
    }

    public static function populate($bean, $rs, $prefix='') {
<?php
  foreach ($descriptor->xml->field as $field) {        
        switch ($field['type']) {
            case 'id': case 'long': case 'Boolean':
                $rsMethod = "getLong";
                break;
            case 'double':
                $rsMethod = "getDouble";
                break;
            case 'String':
                $rsMethod = "getString";
                break;
            case 'Date':
                $rsMethod = "getDate";
                break;
            default:
                throw new Exception("Unrecognized data type (in BeanHomeBase.php): " . $field['type']);
        }
?>
        $bean-><?php echo $descriptor->setterName($field) ?>($rs-><?php echo $rsMethod ?>($prefix . <?php echo $descriptor->xml['name'] . "Bean::" . $descriptor->fieldConstant($field) ?>));
<?php
  }
?>
    }

    public static function findAll() {
        $db = Transaction::getInstance()->getDB();
        $beans = array();
        $sql = "select * from " . <?php echo $descriptor->xml['name'] ?>Bean::TABLE_NAME;
        $db->query($sql);
        while ($row = $db->fetch_row()) { 
            $beans[] = self::create($row);
        }
        return $beans;
    }
}